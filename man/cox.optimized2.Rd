% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BI_cox.optimized2.R
\name{cox.optimized2}
\alias{cox.optimized2}
\title{A pipline of lasso cox modeling}
\usage{
cox.optimized2(expr.matrix, design, select,
  event.status = c("TTR.status", "DFS.status", "OS.status"),
  event.time = c("TTR.time", "DFS.time", "OS.time"),
  event.lower = c(89, 89, 89), k = 10, seed = 2018,
  seed.range = 1:2000, R = 100, optimize.method = "min",
  show.music = T)
}
\arguments{
\item{expr.matrix}{gene expression with sample cols and genes/markers rows.}

\item{design}{design object with characters cols and sample rows.}

\item{select}{intersting genes/markers}

\item{event.status}{a vector of event status names}

\item{event.time}{a vector of event time names}

\item{event.lower}{the cutoff(>) ofevent.time}

\item{k}{number of folds.Default is 10.}

\item{seed}{a number for randomization}

\item{seed.range}{the range of randomization}

\item{R}{the round of randomization}

\item{optimize.method}{Default is "min".You can also use "1se"}

\item{show.music}{whether to show music at the end of the process}
}
\description{
cox.optimized2 use glmnet::cv.glmnet to do optimized selection of lasso cox models based on random seeds
}
\examples{
## This is a simulative process and available only with CORRECT VARIABLES

# Get lots of optimized model
model <- cox.optimized2(expr.matrix = x,
                        design = y,
                        select = cluster,
                        event.status="DFSoutcome",
                        event.time="DFS",
                        event.lower =0,
                        k=10,
                        seed = 2018,
                        seed.range = 1:2000,R=100,
                        optimize.method = "min",
                        show.music = F)

# select models of given status and time
model1 <- model$DFS$modeldata;View(model1)

# models statistics
model2 <- uniqueModel(model1) ;View(model2)

# Visualize the best model
res <- exampleLassoCox(expr.matrix = x,
                      design = y,
                      select = cluster,
                      event.status="DFSoutcome",
                      event.time="DFS",
                      event.lower =0,
                      k=10,
                      seed = 1601,#某个seed.来自model2
                      optimize.method = "min",
                      verbose = T,
                      save.file = T,
                      names = "总GIST")

# select best model
mod <- oneModel(model2[1,],dig=5)

# KM1
th1 <- cox.threshold(expr.matrix = tpm,
                    design = design.train,
                    model = list(mod),
                    event.status="DFS.status",
                    event.time="DFS.time",
                    event.lower = 89,
                    smethod="LogRank",
                    pmethod="HL",
                    dig = 5,
                    cancertype.cv="STAD",
                    file.name = project)

cf <- th1$DFS$cunoff

# KM2: Giving a specified cut off
th2 <- cox.threshold2(expr.matrix = tpm,
                     design = design.train,
                     model = rep(list(mod),3),
                     cut.off = c(cf,cf,cf),
                     event.status=c("TTR.status","DFS.status","OS.status"),
                     event.time=c("TTR.time","DFS.time","OS.time"),
                     event.lower =c(89,89,89),
                     dig = 5,
                     cancertype.cv="STAD",
                     file.name = project)
}
\seealso{
\code{\link[glmnet]{glmnet}};\code{\link[glmnet]{cv.glmnet}};
}
\author{
Weibin Huang<\email{654751191@qq.com}>
}
